---
interface Props {
	href?: string;
	className?: string;
	title: string;
	largeTitle?: boolean;
	kihim?: boolean;
	scrollTo?: string;
}

const { href, className, title, largeTitle, kihim, scrollTo } = Astro.props;

let Header = "h2";
if (largeTitle) Header = "h1";
---

{// WARN: Not currently using this component}

<a href={href} class:list={["card", className]} data-scroll-to={scrollTo}>
	<Header class:list={[{ kihim: kihim }]}>{title}</Header>
	<slot />
</a>

<style>
	.card {
		position: relative;
		overflow: hidden;
		background: none;
		color: var(--red);
		border-radius: 8px;
		padding: 20px;
		box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
		transition: color 0.3s ease;
		z-index: 1;
	}
	.card::after {
		content: "";
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		border: 3px solid transparent;
		border-radius: 8px;
		animation: none;
	}

	.card:hover::after {
		animation: drawBorder 1s ease-in-out forwards;
	}

	@keyframes drawBorder {
		0% {
			border-right-color: transparent;
			border-bottom-color: transparent;
			border-left-color: transparent;
		}
		25% {
			border-top-color: var(--red);
			border-right-color: var(--red);
			border-bottom-color: transparent;
			border-left-color: transparent;
		}
		50% {
			border-right-color: var(--red);
			border-bottom-color: var(--red);
			border-left-color: transparent;
		}
		75% {
			border-bottom-color: var(--red);
			border-left-color: var(--red);
		}
		100% {
			border-color: var(--red);
		}
	}

	.card h1 {
		font-size: 8rem;
		line-height: 0.8em;
	}

	.card h2 {
		font-size: 4rem;
		line-height: 1em;
	}

	.kihim {
		font-family: "Kihim";
		font-size: 5rem !important;
	}

	.card p {
		font-family: "Inter";
	}

	.large {
		grid-column: span 2;
		grid-row: span 2;
	}

	.wide {
		grid-column: span 2;
	}

	.tall {
		grid-row: span 2;
	}
</style>
