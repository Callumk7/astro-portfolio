---
interface Props {
	title: string;
	description: string;
}

const { title, description } = Astro.props;
---

<div class="container">
	<div class="lava">
		<div class="blob blob-1"></div>
		<div class="blob blob-2"></div>
		<div class="blob blob-3"></div>
		<div class="glass"></div>
		<h4>{title}</h4>
		<p>{description}</p>
	</div>
</div>

<style>
	.container {
		position: relative;
		perspective: 1000px;
	}
	.lava {
		width: 100%;
		height: 100%;
		background: linear-gradient(45deg, var(--black), var(--accent-dark));
		border-radius: 24px;
		overflow: hidden;
		box-shadow: 0 20px 50px rgba(0, 0, 0, 0.3);
		position: relative;
	}
	.blob {
		position: absolute;
		border-radius: 50%;
		background: rgba(255, 255, 255, 0.2);
		filter: blur(60px);
		transform-origin: center;
		transition: all 0.5s ease;
	}
	.blob-1 {
		width: 250px;
		height: 250px;
		background: rgba(255, 100, 100, 0.3);
		animation:
			move-blob-1 12s ease-in-out infinite alternate,
			morph-blob-1 12s ease-in-out infinite alternate;
	}
	.blob-2 {
		width: 250px;
		height: 250px;
		background: rgba(100, 100, 100, 0.3);
		animation:
			move-blob-2 12s ease-in-out infinite alternate,
			morph-blob-2 12s ease-in-out infinite alternate;
	}
	.blob-3 {
		width: 250px;
		height: 250px;
		background: rgba(255, 255, 255, 0.3);
		animation:
			move-blob-3 12s ease-in-out infinite alternate,
			morph-blob-3 12s ease-in-out infinite alternate;
	}

	@keyframes move-blob-1 {
		0% {
			top: -50px;
			left: -50px;
			transform: translate(0, 0) rotate(0deg);
		}
		50% {
			top: 300px;
			left: 200px;
			transform: translate(50px, -50px) rotate(180deg);
		}
		100% {
			top: 100px;
			left: 100px;
			transform: translate(-50px, 50px) rotate(360deg);
		}
	}

	@keyframes move-blob-2 {
		0% {
			bottom: -50px;
			right: -50px;
			transform: translate(0, 0) rotate(0deg);
		}
		50% {
			bottom: 200px;
			right: 150px;
			transform: translate(-50px, 50px) rotate(270deg);
		}
		100% {
			bottom: 50px;
			right: 100px;
			transform: translate(50px, -50px) rotate(180deg);
		}
	}

	@keyframes move-blob-3 {
		0% {
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%) rotate(0deg);
		}
		50% {
			top: 250px;
			left: 150px;
			transform: translate(50px, -50px) rotate(90deg);
		}
		100% {
			top: 100px;
			left: 250px;
			transform: translate(-50px, 50px) rotate(180deg);
		}
	}

	@keyframes morph-blob-1 {
		0%,
		100% {
			border-radius: 50% 60% 40% 55%;
		}
		25% {
			border-radius: 55% 45% 60% 40%;
		}
		50% {
			border-radius: 40% 55% 50% 60%;
		}
		75% {
			border-radius: 60% 40% 55% 45%;
		}
	}

	@keyframes morph-blob-2 {
		0%,
		100% {
			border-radius: 60% 40% 55% 45%;
		}
		25% {
			border-radius: 45% 55% 40% 60%;
		}
		50% {
			border-radius: 55% 45% 60% 40%;
		}
		75% {
			border-radius: 40% 60% 45% 55%;
		}
	}

	@keyframes morph-blob-3 {
		0%,
		100% {
			border-radius: 45% 60% 40% 55%;
		}
		25% {
			border-radius: 60% 40% 55% 45%;
		}
		50% {
			border-radius: 40% 55% 60% 45%;
		}
		75% {
			border-radius: 55% 45% 40% 60%;
		}
	}

	.glass {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: linear-gradient(
			135deg,
			rgba(255, 255, 255, 0.1) 0%,
			rgba(255, 255, 255, 0.05) 50%,
			transparent 100%
		);
		pointer-events: none;
		z-index: 10;
	}

	h4 {
		font-size: 1.6rem;
		color: var(--accent);
	}
	p {
		color: var(--black);
	}
</style>
